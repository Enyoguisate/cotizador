{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","capLetter","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","setResumen","setCargando","useState","marca","year","plan","datos","guardarDatos","error","setError","obtenerDatos","e","target","name","value","onSubmit","preventDefault","trim","diferencia","diferenciaYear","thisYear","Date","getFullYear","obtenerDiferenciaYear","descuentoYear","total","base","aumentoMarca","aumentoPlan","parseFloat","toFixed","calcularTotal","obtenerPercPerMarca","obtenerPercPerPlan","setTimeout","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e6fdcb6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({ titulo }) => {\r\n  return (\r\n    <ContenedorHeader>\r\n      <TextoHeader>{titulo}</TextoHeader>\r\n    </ContenedorHeader>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","export function obtenerDiferenciaYear(year) {\r\n    const thisYear = new Date().getFullYear();\r\n    let diferencia = 0;\r\n    if (year >= thisYear) {\r\n        return diferencia;\r\n    } else {\r\n        return thisYear - year;\r\n    }\r\n}\r\n\r\nexport function obtener3PercPerYear(diferencia) {\r\n    if(diferencia === 0){\r\n        return 0;\r\n    } else {\r\n        return diferencia * 3;\r\n    }\r\n}\r\n\r\nexport function obtenerPercPerMarca(marca) {\r\n    switch (marca) {\r\n        case 'americano':\r\n            return 15;\r\n        break;\r\n        case 'asiatico':\r\n            return 5;\r\n        break;\r\n        case 'europeo':\r\n            return 30;\r\n        break;\r\n    }\r\n}\r\n\r\nexport function obtenerPercPerPlan(plan) {\r\n    switch (plan) {\r\n        case 'basico':\r\n            return 20;\r\n        break;\r\n        case 'completo':\r\n            return 50;\r\n        break;\r\n    }\r\n}\r\n\r\nexport function calcularTotal(base, aumentoMarca, aumentoPlan, descuentoYear) {\r\n    return parseFloat(base * (100 + aumentoMarca + aumentoPlan - descuentoYear) / 100).toFixed(2);\r\n}\r\n\r\n// Muestra Letra capital\r\nexport function capLetter(texto) {\r\n    return texto.charAt(0).toUpperCase()+texto.slice(1);\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { \r\n    obtenerDiferenciaYear,\r\n    obtener3PercPerYear,\r\n    calcularTotal,\r\n    obtenerPercPerMarca,\r\n    obtenerPercPerPlan\r\n} from '../helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    --webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838f;\r\n    font-size: 16px;\r\n    width:100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;  \r\n    font-weight: bold;\r\n    border: none;\r\n    transition: backgorud-color 1s ease;\r\n    margin-top: 2rem;\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: #26C6FA\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst Formulario = ({setResumen, setCargando}) => {\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: 'basico'\r\n    });\r\n    const [error, setError] = useState(false)\r\n\r\n    // Extraer los valores del state\r\n    const { marca, year, plan } = datos;\r\n\r\n    const errorMsg = 'Todos los campos son obligatorios';\r\n\r\n    // Leer los datos del form y pasarlos al state\r\n    const obtenerDatos = (e) => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n    // Cuando el usuario presiona submit\r\n    const cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n        // Base seguro de 2000\r\n        const resultado = 2000;\r\n        // Obtener la diferencia de años\r\n        const diferenciaYear = obtenerDiferenciaYear(year);\r\n        // Por cada año hay que restar el 3%\r\n        const descuentoYear = obtener3PercPerYear(diferenciaYear) ;\r\n        // Americado 15%\r\n        // Asiatico 5%\r\n        // Europeo 30%\r\n        const aumentoPerMarca = obtenerPercPerMarca(marca);\r\n        // Basico aumenta 20%\r\n        // Completo aumenta 50% \r\n        const aumetoPerPlan = obtenerPercPerPlan(plan);\r\n        // Calcular total\r\n        const total = calcularTotal(resultado, aumentoPerMarca, aumetoPerPlan, descuentoYear);\r\n        setCargando(true);\r\n        setTimeout(() => {\r\n            setResumen({\r\n                cotizacion: total,\r\n                datos\r\n            });\r\n            setCargando(false);\r\n        },3000);\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={cotizarSeguro}>\r\n            { error ? <Error>{errorMsg}</Error> : null}\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select name=\"marca\" value={marca} onChange={obtenerDatos}>\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiatico</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select name=\"year\" value={year} onChange={obtenerDatos}>\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option> \r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio \r\n                    type=\"radio\" \r\n                    name=\"plan\" \r\n                    value=\"basico\" \r\n                    checked={plan === \"basico\"}\r\n                    onChange={obtenerDatos}\r\n                /> Basico\r\n                <InputRadio \r\n                    type=\"radio\" \r\n                    name=\"plan\" \r\n                    value=\"completo\"\r\n                    checked={plan === \"completo\"}\r\n                    onChange={obtenerDatos}\r\n                /> Completo\r\n            </Campo>\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    setResumen: PropTypes.func.isRequired,\r\n    setCargando: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Formulario;","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { capLetter } from \"../helper\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorResumen = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background-color: #00838f;\r\n  color: #fff;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({ datos }) => {\r\n  // Extraer los datos\r\n  const { marca, plan, year } = datos;\r\n  const val = marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\";\r\n  if (val) {\r\n    return null;\r\n  }\r\n  return (\r\n    <ContenedorResumen>\r\n      <h2>Resumen de Cotizacion</h2>\r\n      <ul>\r\n        <li>Marca: {capLetter(marca)}</li>\r\n        <li>Plan: {capLetter(plan)}</li>\r\n        <li>Año: {year}</li>\r\n      </ul>\r\n    </ContenedorResumen>\r\n  );\r\n};\r\n\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Resumen;\r\n","import React, { Fragment } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Mensaje = styled.p`\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n  text-align: center;\r\n  padding: 0.5rem;\r\n  border: 1px solid #26c6da;\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 1rem;\r\n  position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n  color: #00838f;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Resultado = ({ cotizacion }) => {\r\n  return cotizacion === 0 ? (\r\n    <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n  ) : (\r\n    <ResultadoCotizacion>\r\n      <TransitionGroup component=\"p\" className=\"resultado\">\r\n        <CSSTransition\r\n          classNames=\"resultado\"\r\n          key={cotizacion}\r\n          timeout={{ enter: 500, exit: 500 }}\r\n        >\r\n          <TextoCotizacion>El total es $ {cotizacion}</TextoCotizacion>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    </ResultadoCotizacion>\r\n  );\r\n};\r\n\r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Resultado;\r\n","import React from \"react\";\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n  <div className=\"sk-circle\">\r\n    <div className=\"sk-circle1 sk-child\"></div>\r\n    <div className=\"sk-circle2 sk-child\"></div>\r\n    <div className=\"sk-circle3 sk-child\"></div>\r\n    <div className=\"sk-circle4 sk-child\"></div>\r\n    <div className=\"sk-circle5 sk-child\"></div>\r\n    <div className=\"sk-circle6 sk-child\"></div>\r\n    <div className=\"sk-circle7 sk-child\"></div>\r\n    <div className=\"sk-circle8 sk-child\"></div>\r\n    <div className=\"sk-circle9 sk-child\"></div>\r\n    <div className=\"sk-circle10 sk-child\"></div>\r\n    <div className=\"sk-circle11 sk-child\"></div>\r\n    <div className=\"sk-circle12 sk-child\"></div>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\nimport styled from \"@emotion/styled\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  height: 100%;\n`;\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, setResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: \"\",\n      year: \"\",\n      plan: \"\",\n    },\n  });\n  const [cargando, setCargando] = useState(false);\n  const { datos, cotizacion } = resumen;\n\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de Seguros\" />\n      <ContenedorFormulario>\n        <Formulario setResumen={setResumen} setCargando={setCargando}/>\n        {cargando ? <Spinner /> : null}\n        <Resumen datos={datos}></Resumen>\n        {!cargando ? <Resultado cotizacion={cotizacion}></Resultado> : null}\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}